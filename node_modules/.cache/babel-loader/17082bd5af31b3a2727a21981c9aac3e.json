{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/georgefb/strangers_things/src/components/AccountForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nconst AccountForm = ({\n  type,\n  setToken,\n  setUser\n}) => {\n  _s();\n\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const title = type === 'login' ? 'Login' : 'Register';\n  const oppositeTitle = type === 'login' ? 'Register' : 'Login';\n  const oppositeType = type === 'login' ? 'register' : 'login';\n\n  const handleSubmit = async ev => {\n    ev.preventDefault();\n    const response = await fetch(`https://strangers-things.herokuapp.com/api/2010-CPU-RM-WEB-PT/users/${type}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        user: {\n          username,\n          password\n        }\n      })\n    });\n    const {\n      data\n    } = await response.json();\n    const token = data === null || data === void 0 ? void 0 : data.token;\n\n    if (token) {\n      setToken(token);\n      localStorage.setItem('token', data.data.token);\n      const response = await fetch(`https://strangers-things.herokuapp.com/api/2010-CPU-RM-WEB-PT/users/me`, {\n        method: 'GET',\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      const {\n        data\n      } = await response.json();\n      setUser(data);\n    }\n\n    setUsername('');\n    setPassword('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: username,\n        onChange: ev => setUsername(ev.target.value),\n        placeholder: \"username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        onChange: ev => setPassword(ev.target.value),\n        placeholder: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 4\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: `/${oppositeType}`,\n      children: oppositeTitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true);\n};\n\n_s(AccountForm, \"wuQOK7xaXdVz4RMrZQhWbI751Oc=\");\n\n_c = AccountForm;\nexport default AccountForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AccountForm\");","map":{"version":3,"sources":["/home/georgefb/strangers_things/src/components/AccountForm.js"],"names":["React","useState","Link","AccountForm","type","setToken","setUser","username","setUsername","password","setPassword","title","oppositeTitle","oppositeType","handleSubmit","ev","preventDefault","response","fetch","method","headers","body","JSON","stringify","user","data","json","token","localStorage","setItem","target","value"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport {Link} from 'react-router-dom';\n\nconst AccountForm = ({type, setToken, setUser}) => {\n\tconst [username, setUsername] = useState('');\n\tconst [password, setPassword] = useState('');\n\tconst title = type === 'login' ? 'Login' : 'Register';\n\tconst oppositeTitle = type === 'login' ? 'Register' : 'Login';\n\tconst oppositeType = type === 'login' ? 'register' : 'login';\n\t\n\tconst handleSubmit = async (ev) => {\n\t\tev.preventDefault();\n\t\t\n\t\tconst response = await fetch(`https://strangers-things.herokuapp.com/api/2010-CPU-RM-WEB-PT/users/${type}`, {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t},\n\t\t\tbody: JSON.stringify({\n\t\t\t\tuser:{\n\t\t\t\t\tusername,\n\t\t\t\t\tpassword\n\t\t\t\t}\n\t\t\t})\n\t\t});\n\t\tconst {data} = await response.json();\n\t\tconst token = data?.token;\n\t\tif (token) {\n\t\t\tsetToken(token);\n\t\t\tlocalStorage.setItem('token', data.data.token);\n\t\t\tconst response = await fetch(`https://strangers-things.herokuapp.com/api/2010-CPU-RM-WEB-PT/users/me`, {\n\t\t\t  method: 'GET',\n\t\t\t  headers: {\n\t\t\t    'Authorization': `Bearer ${token}`,\n\t\t\t  },\n\t\t\t});\n\t\t\tconst {data} = await response.json();\n\t\t\tsetUser(data);\n\t\t}\n\t\tsetUsername('');\n\t\tsetPassword('');\n\t}\n\t\n\treturn <>\n\t\t<h2>{title}</h2>\n\t\t<form onSubmit={handleSubmit}>\n\t\t\t<input type='text' value={username} onChange={(ev) => setUsername(ev.target.value)} placeholder=\"username\"></input>\n\t\t\t<input type='password' value={password} onChange={(ev) => setPassword(ev.target.value)} placeholder=\"password\"></input>\n\t\t\t<button type=\"submit\">{title}</button>\n\t\t</form>\n\t\t<Link to={`/${oppositeType}`}>{oppositeTitle}</Link>\n\t</>\n}\n\nexport default AccountForm;\n"]},"metadata":{},"sourceType":"module"}